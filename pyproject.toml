# SPDX-FileCopyrightText: Magenta ApS
#
# SPDX-License-Identifier: MPL-2.0
[tool.poetry]
name = "os2sync_export"
version = "0.0.0" # versioning handled by conventional commits
description = "Integration from OS2mo to OS2Sync"
authors = ["Magenta ApS <info@magenta.dk>"]
license = "MPL-2.0"
homepage = "https://magenta.dk/"
repository = "https://git.magenta.dk/rammearkitektur/os2mo-data-import-and-export"
keywords = ["os2mo", "dipex", "os2sync"]

[tool.poetry.dependencies]
python = "^3.11.0"
fastramqpi = "^10.0.5"
gql = "^3.5.0"
Jinja2 = "^3.1"
prometheus-fastapi-instrumentator = "^7.0.0"
requests = "^2.32.3"
uvicorn = "^0.31.1"
os2mo-data-import = "^6.2.2"
fastapi = "0.115.12"
websockets = "^13.1" # for ariadne
click = "^8.1.7"
tqdm = "^4.67.1"
types-tqdm = "^4.66.0.20240417"

[tool.poetry.group.pre-commit.dependencies]
pre-commit = "^3.8.0"
mypy = "^1.12.1"
ruff = "^0.6.4"
types-requests = "^2.32.0.20240905"

[tool.poetry.group.dev.dependencies]
ariadne-codegen = "^0.7"

[tool.poetry.group.test.dependencies]
hypothesis = "^6.75.3"
pytest = "^8.3.3"
pytest-asyncio = "^0.21.0"
pytest-cov = "^4.1.0"
pytest-split = "^0.8.1"
freezegun = "^1.5.1"
parameterized = "^0.9.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.flake8]
max-line-length = 100
extend-ignore = "E203, E501"
statistics = "true"

[tool.mypy]
exclude = ["autogenerated_graphql_client/*"]

[tool.pytest.ini_options]
asyncio_mode="auto"

[tool.ruff.lint]
extend-select = ["I"]

[tool.ruff.lint.isort]
force-single-line = true

[tool.ariadne-codegen]
# Ideally, the GraphQL client is generated as part of the build process and
# never committed to git. Unfortunately, most of our tools and CI analyses the
# project directly as it is in Git. In the future - when the CI templates
# operate on the built container image - only the definition of the schema and
# queries should be checked in.
#
# The default package name is `graphql_client`. Make it more obvious that the
# files are not to be modified manually.
target_package_name = "autogenerated_graphql_client"
target_package_path = "os2sync_export/"
client_name = "GraphQLClient"
schema_path = "schema.graphql"  # curl -O http://localhost:5000/graphql/v23/schema.graphql
queries_path = "queries.graphql"
include_all_inputs = false
include_all_enums = false
plugins = [
    # Return values directly when only a single top field is requested
    "ariadne_codegen.contrib.shorter_results.ShorterResultsPlugin",
]
[tool.ariadne-codegen.scalars.DateTime]
type = "datetime.datetime"
parse = "fastramqpi.ariadne.parse_graphql_datetime"
[tool.ariadne-codegen.scalars.UUID]
type = "uuid.UUID"
