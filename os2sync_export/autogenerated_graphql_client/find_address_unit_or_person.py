# Generated by ariadne-codegen on 2024-10-21 10:18
# Source: queries.graphql

from typing import List
from typing import Optional
from uuid import UUID

from .base_model import BaseModel


class FindAddressUnitOrPerson(BaseModel):
    addresses: "FindAddressUnitOrPersonAddresses"


class FindAddressUnitOrPersonAddresses(BaseModel):
    objects: List["FindAddressUnitOrPersonAddressesObjects"]


class FindAddressUnitOrPersonAddressesObjects(BaseModel):
    validities: List["FindAddressUnitOrPersonAddressesObjectsValidities"]


class FindAddressUnitOrPersonAddressesObjectsValidities(BaseModel):
    org_unit: Optional[List["FindAddressUnitOrPersonAddressesObjectsValiditiesOrgUnit"]]
    person: Optional[List["FindAddressUnitOrPersonAddressesObjectsValiditiesPerson"]]


class FindAddressUnitOrPersonAddressesObjectsValiditiesOrgUnit(BaseModel):
    uuid: UUID


class FindAddressUnitOrPersonAddressesObjectsValiditiesPerson(BaseModel):
    uuid: UUID


FindAddressUnitOrPerson.update_forward_refs()
FindAddressUnitOrPersonAddresses.update_forward_refs()
FindAddressUnitOrPersonAddressesObjects.update_forward_refs()
FindAddressUnitOrPersonAddressesObjectsValidities.update_forward_refs()
FindAddressUnitOrPersonAddressesObjectsValiditiesOrgUnit.update_forward_refs()
FindAddressUnitOrPersonAddressesObjectsValiditiesPerson.update_forward_refs()
