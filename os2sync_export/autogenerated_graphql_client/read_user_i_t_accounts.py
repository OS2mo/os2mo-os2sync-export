# Generated by ariadne-codegen on 2024-09-11 09:50
# Source: queries.graphql

from typing import List
from typing import Optional
from uuid import UUID

from pydantic import Field

from .base_model import BaseModel


class ReadUserITAccounts(BaseModel):
    employees: "ReadUserITAccountsEmployees"


class ReadUserITAccountsEmployees(BaseModel):
    objects: List["ReadUserITAccountsEmployeesObjects"]


class ReadUserITAccountsEmployeesObjects(BaseModel):
    current: Optional["ReadUserITAccountsEmployeesObjectsCurrent"]


class ReadUserITAccountsEmployeesObjectsCurrent(BaseModel):
    fk_org_users: List["ReadUserITAccountsEmployeesObjectsCurrentFkOrgUsers"]
    a_d_users: List["ReadUserITAccountsEmployeesObjectsCurrentADUsers"] = Field(
        alias="AD_users"
    )


class ReadUserITAccountsEmployeesObjectsCurrentFkOrgUsers(BaseModel):
    user_key: str
    external_id: Optional[str]


class ReadUserITAccountsEmployeesObjectsCurrentADUsers(BaseModel):
    uuid: UUID
    user_key: str
    external_id: Optional[str]


ReadUserITAccounts.update_forward_refs()
ReadUserITAccountsEmployees.update_forward_refs()
ReadUserITAccountsEmployeesObjects.update_forward_refs()
ReadUserITAccountsEmployeesObjectsCurrent.update_forward_refs()
ReadUserITAccountsEmployeesObjectsCurrentFkOrgUsers.update_forward_refs()
ReadUserITAccountsEmployeesObjectsCurrentADUsers.update_forward_refs()
