# Generated by ariadne-codegen on 2024-09-11 09:50
# Source: queries.graphql

from typing import Any
from typing import List
from typing import Optional
from uuid import UUID

from .base_model import BaseModel


class ReadUser(BaseModel):
    itusers: "ReadUserItusers"


class ReadUserItusers(BaseModel):
    objects: List["ReadUserItusersObjects"]


class ReadUserItusersObjects(BaseModel):
    current: Optional["ReadUserItusersObjectsCurrent"]


class ReadUserItusersObjectsCurrent(BaseModel):
    user_key: str
    external_id: Optional[str]
    person: Optional[List["ReadUserItusersObjectsCurrentPerson"]]
    engagement: Optional[List["ReadUserItusersObjectsCurrentEngagement"]]
    email: List["ReadUserItusersObjectsCurrentEmail"]
    phone: List["ReadUserItusersObjectsCurrentPhone"]


class ReadUserItusersObjectsCurrentPerson(BaseModel):
    cpr_number: Optional[Any]
    name: str
    nickname: str


class ReadUserItusersObjectsCurrentEngagement(BaseModel):
    org_unit: List["ReadUserItusersObjectsCurrentEngagementOrgUnit"]
    job_function: "ReadUserItusersObjectsCurrentEngagementJobFunction"


class ReadUserItusersObjectsCurrentEngagementOrgUnit(BaseModel):
    uuid: UUID


class ReadUserItusersObjectsCurrentEngagementJobFunction(BaseModel):
    name: str


class ReadUserItusersObjectsCurrentEmail(BaseModel):
    address_type: "ReadUserItusersObjectsCurrentEmailAddressType"
    visibility: Optional["ReadUserItusersObjectsCurrentEmailVisibility"]
    value: str


class ReadUserItusersObjectsCurrentEmailAddressType(BaseModel):
    scope: Optional[str]
    uuid: UUID


class ReadUserItusersObjectsCurrentEmailVisibility(BaseModel):
    user_key: str


class ReadUserItusersObjectsCurrentPhone(BaseModel):
    address_type: "ReadUserItusersObjectsCurrentPhoneAddressType"
    visibility: Optional["ReadUserItusersObjectsCurrentPhoneVisibility"]
    value: str


class ReadUserItusersObjectsCurrentPhoneAddressType(BaseModel):
    uuid: UUID
    scope: Optional[str]


class ReadUserItusersObjectsCurrentPhoneVisibility(BaseModel):
    user_key: str


ReadUser.update_forward_refs()
ReadUserItusers.update_forward_refs()
ReadUserItusersObjects.update_forward_refs()
ReadUserItusersObjectsCurrent.update_forward_refs()
ReadUserItusersObjectsCurrentPerson.update_forward_refs()
ReadUserItusersObjectsCurrentEngagement.update_forward_refs()
ReadUserItusersObjectsCurrentEngagementOrgUnit.update_forward_refs()
ReadUserItusersObjectsCurrentEngagementJobFunction.update_forward_refs()
ReadUserItusersObjectsCurrentEmail.update_forward_refs()
ReadUserItusersObjectsCurrentEmailAddressType.update_forward_refs()
ReadUserItusersObjectsCurrentEmailVisibility.update_forward_refs()
ReadUserItusersObjectsCurrentPhone.update_forward_refs()
ReadUserItusersObjectsCurrentPhoneAddressType.update_forward_refs()
ReadUserItusersObjectsCurrentPhoneVisibility.update_forward_refs()
