# Generated by ariadne-codegen on 2024-09-11 13:39
# Source: queries.graphql

from typing import List
from typing import Optional
from typing import Union
from uuid import UUID

from .async_base_client import AsyncBaseClient
from .base_model import UNSET
from .base_model import UnsetType
from .get_i_t_accounts import GetITAccounts
from .get_i_t_accounts import GetITAccountsEmployees


def gql(q: str) -> str:
    return q


class GraphQLClient(AsyncBaseClient):
    async def get_i_t_accounts(
        self, uuids: Union[Optional[List[UUID]], UnsetType] = UNSET
    ) -> List[GetITAccountsEmployees]:
        query = gql(
            """
            query GetITAccounts($uuids: [UUID!]) {
              employees(uuids: $uuids) {
                objects {
                  itusers {
                    uuid
                    user_key
                    engagement_uuid
                    itsystem {
                      name
                    }
                  }
                }
              }
            }
            """
        )
        variables: dict[str, object] = {"uuids": uuids}
        response = await self.execute(query=query, variables=variables)
        data = self.get_data(response)
        return GetITAccounts.parse_obj(data).employees
